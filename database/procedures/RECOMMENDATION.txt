CREATE OR REPLACE PROCEDURE "RECOMMENDATION" (ID IN NUMBER,STATUS OUT VARCHAR2,RECIPES_CR OUT SYS_REFCURSOR) AS
BEGIN
	OPEN RECIPES_CR FOR 
	SELECT
	* 
FROM
	(
	SELECT DISTINCT
		R.RECIPE_ID,
		R.TITLE,
		( SELECT ( FIRST_NAME || ' ' || LAST_NAME ) AS NAME FROM USERS WHERE USER_ID = R.USER_ID ) AS PUBLISHER_NAME,
		TO_CHAR( R.CREATION_DATE, 'DD/MON/YY' ) CREATION_DATE, R.COOKING_INSTRUCTION,AVERAGE_RATING(R.RECIPE_ID) as RATING,(SELECT IMAGE FROM MEDIA WHERE RECIPE_ID = R.RECIPE_ID)AS IMAGE
	FROM
		RECIPES R
		LEFT JOIN RECIPE_TAGS RT ON ( R.RECIPE_ID = RT.RECIPE_ID ) 
	WHERE
		RT.TAG_ID IN (
		SELECT
			T.TAG_ID 
		FROM
			USERS U
			LEFT JOIN REVIEWS R ON ( U.USER_ID = R.USER_ID AND R.RATING >= 3 )
			LEFT JOIN RECIPE_TAGS T ON ( T.RECIPE_ID = R.RECIPE_ID ) 
		WHERE
			U.USER_ID = ID 
		) 
		AND 3 < (
		SELECT
			AVG( RV.RATING ) 
		FROM
			REVIEWS RV
			JOIN RECIPES R2 ON ( R2.RECIPE_ID = RV.RECIPE_ID ) 
		WHERE
			R2.RECIPE_ID = R.RECIPE_ID 
		GROUP BY
			R2.RECIPE_ID 
		) 
	ORDER BY
		R.TITLE 
	) UNION
SELECT
	* 
FROM
	(
	SELECT DISTINCT
		R.RECIPE_ID,
		R.TITLE,
		( SELECT ( FIRST_NAME || ' ' || LAST_NAME ) AS NAME FROM USERS WHERE USER_ID = R.USER_ID ) AS PUBLISHER_NAME,
		TO_CHAR( R.CREATION_DATE, 'DD/MON/YY' ) CREATION_DATE ,R.COOKING_INSTRUCTION,AVERAGE_RATING(R.RECIPE_ID) as RATING,(SELECT IMAGE FROM MEDIA WHERE RECIPE_ID = R.RECIPE_ID)AS IMAGE
	FROM
		RECIPES R
		JOIN RECIPE_TAGS RT ON ( R.RECIPE_ID = RT.RECIPE_ID ) 
	WHERE
		RT.TAG_ID IN (
		SELECT
			T.TAG_ID 
		FROM
			USERS U
			JOIN USER_DIETARY_RESTRICTIONS UDR ON ( UDR.USER_ID = U.USER_ID )
			JOIN DIETARY_RESTRICTIONS DR ON ( UDR.DIETARY_ID = DR.DIETARY_ID )
			JOIN TAGS T ON ( T.NAME LIKE DR.RESTRICTION ) 
		WHERE
			U.USER_ID = ID 
		) 
	ORDER BY
		R.TITLE 
	) UNION
SELECT
	* 
FROM
	(
	SELECT DISTINCT
		R.RECIPE_ID,
		R.TITLE,
		( SELECT ( FIRST_NAME || ' ' || LAST_NAME ) AS NAME FROM USERS WHERE USER_ID = R.USER_ID ) AS PUBLISHER_NAME,
		TO_CHAR( R.CREATION_DATE, 'DD/MON/YY' ) CREATION_DATE , R.COOKING_INSTRUCTION,AVERAGE_RATING(R.RECIPE_ID) as RATING,(SELECT IMAGE FROM MEDIA WHERE RECIPE_ID = R.RECIPE_ID)AS IMAGE
	FROM
		RECIPES R
		JOIN USERS U ON ( U.USER_ID = R.USER_ID ) 
	WHERE
		3 < (
		SELECT
			AVG( RV.RATING ) 
		FROM
			REVIEWS RV
			JOIN RECIPES R2 ON ( R2.RECIPE_ID = RV.RECIPE_ID ) 
		WHERE
			R2.RECIPE_ID = R.RECIPE_ID 
		GROUP BY
			R2.RECIPE_ID 
		) 
		AND U.USER_ID IN ( SELECT FOLLOWING_ID FROM FOLLOW WHERE USER_ID = 2 ) 
	ORDER BY
	R.TITLE 
	);
	
STATUS := 'SUCCESSFUL';
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	STATUS := 'NO DATA FOUND';
	WHEN OTHERS THEN
	STATUS := 'UNKNOWN ERROR';
END;